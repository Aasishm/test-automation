<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="5" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-01T15:55:26 IST" name="Command line suite" finished-at="2024-10-01T15:56:28 IST" duration-ms="61808">
    <groups>
    </groups>
    <test started-at="2024-10-01T15:55:26 IST" name="Command line test" finished-at="2024-10-01T15:56:28 IST" duration-ms="61808">
      <class name="test.AppTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:12 IST" name="setup" finished-at="2024-10-01T15:55:26 IST" duration-ms="14240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginPageNavigation()[pri:1, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:26 IST" name="verifyLoginPageNavigation" description="This test clicks on Login button and navigates to Login Page" finished-at="2024-10-01T15:55:31 IST" duration-ms="4503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginPageNavigation -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:31 IST" name="getResult" finished-at="2024-10-01T15:55:31 IST" duration-ms="335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginPageNavigation status=SUCCESS method=AppTest.verifyLoginPageNavigation()[pri:1, instance:test.AppTest@2fd66ad3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyLoginPageTitle()[pri:2, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:31 IST" name="verifyLoginPageTitle" description="This test checks if the title of the login page says &#039;Login&#039;." finished-at="2024-10-01T15:55:31 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginPageTitle -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:31 IST" name="getResult" finished-at="2024-10-01T15:55:31 IST" duration-ms="166" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginPageTitle status=SUCCESS method=AppTest.verifyLoginPageTitle()[pri:2, instance:test.AppTest@2fd66ad3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyEmailFieldIsPresent()[pri:3, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:31 IST" name="verifyEmailFieldIsPresent" description="Check if email input field is present" finished-at="2024-10-01T15:55:41 IST" duration-ms="10142" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Email Field is NOT PRESENT expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Email Field is NOT PRESENT expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at test.AppTest.verifyEmailFieldIsPresent(AppTest.java:82)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at test.AppTest.main(AppTest.java:155)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailFieldIsPresent -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:41 IST" name="getResult" finished-at="2024-10-01T15:55:42 IST" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailFieldIsPresent status=FAILURE method=AppTest.verifyEmailFieldIsPresent()[pri:3, instance:test.AppTest@2fd66ad3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyPasswordFieldIsPresent()[pri:4, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:42 IST" name="verifyPasswordFieldIsPresent" description="Check if password input fields is present" finished-at="2024-10-01T15:55:52 IST" duration-ms="10113" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Password Field is NOT PRESENT expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Password Field is NOT PRESENT expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at test.AppTest.verifyPasswordFieldIsPresent(AppTest.java:90)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at test.AppTest.main(AppTest.java:155)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldIsPresent -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:52 IST" name="getResult" finished-at="2024-10-01T15:55:52 IST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPasswordFieldIsPresent status=FAILURE method=AppTest.verifyPasswordFieldIsPresent()[pri:4, instance:test.AppTest@2fd66ad3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="switchBackToMainTab()[pri:5, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:52 IST" name="switchBackToMainTab" description="Switch back to main demo tab and verify the same" finished-at="2024-10-01T15:55:52 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- switchBackToMainTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:52 IST" name="getResult" finished-at="2024-10-01T15:55:52 IST" duration-ms="259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=switchBackToMainTab status=SUCCESS method=AppTest.switchBackToMainTab()[pri:5, instance:test.AppTest@2fd66ad3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getAllLinks()[pri:6, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:52 IST" name="getAllLinks" description="Get list of links in the webpage" finished-at="2024-10-01T15:55:52 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllLinks -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:52 IST" name="getResult" finished-at="2024-10-01T15:55:53 IST" duration-ms="259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllLinks status=SUCCESS method=AppTest.getAllLinks()[pri:6, instance:test.AppTest@2fd66ad3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyAPIStatusCodes()[pri:7, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:55:53 IST" name="verifyAPIStatusCodes" description="Make API requests to the links and verify status codes" finished-at="2024-10-01T15:56:28 IST" duration-ms="35287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIStatusCodes -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:56:28 IST" name="getResult" finished-at="2024-10-01T15:56:28 IST" duration-ms="269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIStatusCodes status=SUCCESS method=AppTest.verifyAPIStatusCodes()[pri:7, instance:test.AppTest@2fd66ad3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.AppTest@2fd66ad3]" started-at="2024-10-01T15:56:28 IST" name="tearDown" finished-at="2024-10-01T15:56:28 IST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.AppTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
